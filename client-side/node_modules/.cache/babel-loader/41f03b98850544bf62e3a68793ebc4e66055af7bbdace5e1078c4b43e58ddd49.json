{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\Desktop\\\\start\\\\client-side\\\\src\\\\Components\\\\MessageInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Components.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageInput(props) {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const updateMessage = e => {\n    setMessage(e.target.value);\n  };\n  const sendMessage = async () => {\n    try {\n      const dizkuzData = JSON.parse(localStorage.getItem(\"dizkuzData\"));\n      const currentUser_ = JSON.parse(localStorage.getItem(\"currentUser\"));\n      const IssID = dizkuzData.currentIssue;\n      const inp = {\n        name: currentUser_.name,\n        email: currentUser_.email,\n        password: currentUser_.password,\n        User_id: currentUser_._id,\n        body: message,\n        IssueID: IssID\n      };\n      const response = await fetch(\"https://dizkuz-server.onrender.com/sendmessage\", {\n        method: \"POST\",\n        body: JSON.stringify(inp),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      if (data.status === \"success\") {\n        props.setChatReloader(props.chatReloader + 1);\n        setMessage(\"\");\n      } else {\n        props.setAlertHead(\"Some unknown Error occured!\");\n        props.setAlertBody(\"There was some unexpected error which prevented the message to be sent. Please try again.\");\n        props.setAlertVarient(\"danger\");\n        props.setAlertShow(true);\n      }\n    } catch (error) {\n      props.setAlertHead(\"Unexpected Error occured!\");\n      props.setAlertBody(\"Could not send the message. Please check your connection and try again.\");\n      props.setAlertVarient(\"danger\");\n      props.setAlertShow(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MessageInputBar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MessageBar\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        className: \"Inputmsg\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter your message\",\n          onChange: updateMessage,\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"sendBtn\",\n        variant: \"outline-success\",\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 11\n  }, this);\n}\n_s(MessageInput, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","useState","Form","Button","jsxDEV","_jsxDEV","MessageInput","props","_s","message","setMessage","updateMessage","e","target","value","sendMessage","dizkuzData","JSON","parse","localStorage","getItem","currentUser_","IssID","currentIssue","inp","name","email","password","User_id","_id","body","IssueID","response","fetch","method","stringify","headers","data","json","status","setChatReloader","chatReloader","setAlertHead","setAlertBody","setAlertVarient","setAlertShow","error","className","children","Control","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vijay/Desktop/start/client-side/src/Components/MessageInput.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Components.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function MessageInput(props) {\n     const [message, setMessage] = useState(\"\");\n\n     const updateMessage = (e) => {\n          setMessage(e.target.value);\n     };\n\n     const sendMessage = async () => {\n          try {\n               const dizkuzData = JSON.parse(\n                    localStorage.getItem(\"dizkuzData\")\n               );\n               const currentUser_ = JSON.parse(\n                    localStorage.getItem(\"currentUser\")\n               );\n               const IssID = dizkuzData.currentIssue;\n               const inp = {\n                    name: currentUser_.name,\n                    email: currentUser_.email,\n                    password: currentUser_.password,\n                    User_id: currentUser_._id,\n                    body: message,\n                    IssueID: IssID,\n               };\n               const response = await fetch(\n                    \"https://dizkuz-server.onrender.com/sendmessage\",\n                    {\n                         method: \"POST\",\n                         body: JSON.stringify(inp),\n                         headers: {\n                              \"Content-Type\": \"application/json\",\n                         },\n                    }\n               );\n               const data = await response.json();\n               if (data.status === \"success\") {\n                    props.setChatReloader(props.chatReloader + 1);\n                    setMessage(\"\");\n               } else {\n                    props.setAlertHead(\"Some unknown Error occured!\");\n                    props.setAlertBody(\n                         \"There was some unexpected error which prevented the message to be sent. Please try again.\"\n                    );\n                    props.setAlertVarient(\"danger\");\n                    props.setAlertShow(true);\n               }\n          } catch (error) {\n               props.setAlertHead(\"Unexpected Error occured!\");\n               props.setAlertBody(\n                    \"Could not send the message. Please check your connection and try again.\"\n               );\n               props.setAlertVarient(\"danger\");\n               props.setAlertShow(true);\n          }\n     };\n     return (\n          <div className=\"MessageInputBar\">\n               <div className=\"MessageBar\">\n                    <Form className=\"Inputmsg\">\n                         <Form.Control\n                              type=\"text\"\n                              placeholder=\"Enter your message\"\n                              onChange={updateMessage}\n                              value={message}\n                         />\n                    </Form>\n                    <Button\n                         className=\"sendBtn\"\n                         variant=\"outline-success\"\n                         onClick={sendMessage}\n                    >\n                         Send\n                    </Button>\n               </div>\n          </div>\n     );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}