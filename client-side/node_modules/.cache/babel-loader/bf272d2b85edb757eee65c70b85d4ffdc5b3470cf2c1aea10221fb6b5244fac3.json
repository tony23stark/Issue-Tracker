{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\Desktop\\\\start\\\\client-side\\\\src\\\\Pages\\\\NewOrganisationPage\\\\NewOrganisationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NavBar from \"../../Components/NavBar\";\nimport Footer from \"../../Components/Footer\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./NewOrganisationPage.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewOrganisationPage() {\n  _s();\n  const [alertHead, setAlertHead] = useState(\"\");\n  const [alertBody, setAlertBody] = useState(\"\");\n  const [variant, setVariant] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const navigate = useNavigate();\n  const [participants, setParticipants] = useState([]);\n  const [dummy, setDummy] = useState(true);\n  const [OrganisationName, setOrganisationName] = useState(\"\");\n  let NewUserID = \"\";\n  let currentUser_ = {};\n  let participants_ = participants;\n  let participantComponent = participants_.map(participant => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: participant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  });\n  const handleInputName = e => {\n    setOrganisationName(e.target.value);\n  };\n  const handleID = e => {\n    NewUserID = e.target.value;\n  };\n  const AddNewUser = async e => {\n    e.preventDefault();\n    if (NewUserID == \"\") {\n      setAlertHead(\"UserID is empty!\");\n      setAlertBody(\"The userID cannot be an empty string. Please enter userID.\");\n      setVariant(\"warning\");\n      setShow(true);\n    } else {\n      const checkID = {\n        userID: NewUserID\n      };\n      try {\n        const response = await fetch(\"https://dizkuz-server.onrender.com/checkuserid\", {\n          method: \"POST\",\n          body: JSON.stringify(checkID),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await response.json();\n        if (data.status === \"Found\") {\n          setAlertHead(\"User Added Succesfully!\");\n          setAlertBody(\"The user has been added to the organisation\");\n          setVariant(\"success\");\n          setShow(true);\n          let arr = participants;\n          arr.push(NewUserID);\n          setParticipants(arr);\n          setDummy(!dummy);\n          document.getElementsByClassName(\"newUserIDUserInput\")[0].value = \"\";\n        } else {\n          setAlertHead(\"User not found!\");\n          setAlertBody(\"The userID you entered does not exist in our database. Please check it and try again.\");\n          setVariant(\"danger\");\n          setShow(true);\n        }\n      } catch (error) {\n        setAlertHead(\"Unknown error occured!\");\n        setAlertBody(\"An unknown error occured. please check your network and try again.\");\n        setVariant(\"danger\");\n        setShow(true);\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const currentUser_ = JSON.parse(localStorage.getItem(\"currentUser\"));\n    const organisation = {\n      name: currentUser_.name,\n      email: currentUser_.email,\n      password: currentUser_.password,\n      organisations: currentUser_.organisations,\n      User_id: currentUser_._id,\n      users: participants,\n      OrgName: OrganisationName\n    };\n    try {\n      const response = await fetch(\"https://dizkuz-server.onrender.com/newOrg\", {\n        method: \"POST\",\n        body: JSON.stringify(organisation),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      if (data.status === \"Success\") {\n        let curUser = {\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          organisations: data.organisations,\n          messages: data.messages,\n          _id: data._id,\n          __v: data.__v\n        };\n        localStorage.removeItem(\"currentUser\");\n        localStorage.setItem(\"currentUser\", JSON.stringify(curUser));\n        navigate(\"/organisations\");\n      } else {\n        setAlertHead(\"Unknown error occured!\");\n        setAlertBody(\"An unknown error occured. please check your network and try again.\");\n        setShow(true);\n      }\n    } catch (error) {\n      setAlertHead(\"Unknown error occured!\");\n      setAlertBody(\"An unknown error occured. please check your network and try again.\");\n      setShow(true);\n    }\n  };\n  useEffect(() => {\n    currentUser_ = JSON.parse(localStorage.getItem(\"currentUser\"));\n    if (currentUser_ == null) {\n      navigate(\"/landing\");\n    }\n  }, []);\n  return show ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"50px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      variant: variant,\n      onClose: () => setShow(false),\n      dismissible: true,\n      children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n        children: alertHead\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: alertBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NewOrganisationContainer\",\n        style: {\n          paddingTop: \"0px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Create New Organisation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NewOrganisationSubContainer\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"NewOrganisationSubContainer2\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Organisation's name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter your organisation's name\",\n                name: \"organisationName\",\n                value: OrganisationName,\n                onChange: handleInputName,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Name of an organisation can never be changed again.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participantContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"start\"\n                },\n                children: participantComponent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Add user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter the ID of the user\",\n                name: \"newUserID\",\n                onChange: handleID,\n                className: \"newUserIDUserInput\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Leave it blank if you don't want to add more users.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              className: \"newOrgButton\",\n              onClick: AddNewUser,\n              children: \"Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"newOrgButton\",\n              onClick: handleSubmit,\n              children: \"Create Organisation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"NewOrganisationContainer\",\n        style: {\n          paddingTop: \"70px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Create New Organisation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"NewOrganisationSubContainer\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"NewOrganisationSubContainer2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Organisation's name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter your organisation's name\",\n                name: \"organisationName\",\n                value: OrganisationName,\n                onChange: handleInputName,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Name of an organisation can never be changed again.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"participantContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"start\"\n                },\n                children: participantComponent\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Add user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter the ID of the user\",\n                name: \"newUserID\",\n                onChange: handleID,\n                className: \"newUserIDUserInput\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Leave it blank if you don't want to add more users.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-primary\",\n              className: \"newOrgButton\",\n              onClick: AddNewUser,\n              children: \"Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"newOrgButton\",\n              onClick: handleSubmit,\n              children: \"Create Organisation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 11\n  }, this);\n}\n_s(NewOrganisationPage, \"wyaE1askQ/YksTAUWd0uwaqhI0s=\", false, function () {\n  return [useNavigate];\n});\n_c = NewOrganisationPage;\nvar _c;\n$RefreshReg$(_c, \"NewOrganisationPage\");","map":{"version":3,"names":["React","useEffect","useState","NavBar","Footer","Button","Form","useNavigate","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","NewOrganisationPage","_s","alertHead","setAlertHead","alertBody","setAlertBody","variant","setVariant","show","setShow","navigate","participants","setParticipants","dummy","setDummy","OrganisationName","setOrganisationName","NewUserID","currentUser_","participants_","participantComponent","map","participant","children","fileName","_jsxFileName","lineNumber","columnNumber","handleInputName","e","target","value","handleID","AddNewUser","preventDefault","checkID","userID","response","fetch","method","body","JSON","stringify","headers","data","json","status","arr","push","document","getElementsByClassName","error","handleSubmit","parse","localStorage","getItem","organisation","name","email","password","organisations","User_id","_id","users","OrgName","curUser","messages","__v","removeItem","setItem","style","height","onClose","dismissible","Heading","className","paddingTop","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","required","Text","textAlign","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vijay/Desktop/start/client-side/src/Pages/NewOrganisationPage/NewOrganisationPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NavBar from \"../../Components/NavBar\";\nimport Footer from \"../../Components/Footer\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./NewOrganisationPage.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from \"react-bootstrap/Alert\";\n\nexport default function NewOrganisationPage() {\n     const [alertHead, setAlertHead] = useState(\"\");\n     const [alertBody, setAlertBody] = useState(\"\");\n     const [variant, setVariant] = useState(\"\");\n     const [show, setShow] = useState(false);\n     const navigate = useNavigate();\n     const [participants, setParticipants] = useState([]);\n     const [dummy, setDummy] = useState(true);\n     const [OrganisationName, setOrganisationName] = useState(\"\");\n\n     let NewUserID = \"\";\n     let currentUser_ = {};\n     let participants_ = participants;\n\n     let participantComponent = participants_.map((participant) => {\n          return (\n               <>\n                    <p>{participant}</p>\n               </>\n          );\n     });\n     const handleInputName = (e) => {\n          setOrganisationName(e.target.value);\n     };\n     const handleID = (e) => {\n          NewUserID = e.target.value;\n     };\n     const AddNewUser = async (e) => {\n          e.preventDefault();\n          if (NewUserID == \"\") {\n               setAlertHead(\"UserID is empty!\");\n               setAlertBody(\n                    \"The userID cannot be an empty string. Please enter userID.\"\n               );\n               setVariant(\"warning\");\n               setShow(true);\n          } else {\n               const checkID = {\n                    userID: NewUserID,\n               };\n               try {\n                    const response = await fetch(\n                         \"https://dizkuz-server.onrender.com/checkuserid\",\n                         {\n                              method: \"POST\",\n                              body: JSON.stringify(checkID),\n                              headers: {\n                                   \"Content-Type\": \"application/json\",\n                              },\n                         }\n                    );\n                    const data = await response.json();\n                    if (data.status === \"Found\") {\n                         setAlertHead(\"User Added Succesfully!\");\n                         setAlertBody(\n                              \"The user has been added to the organisation\"\n                         );\n                         setVariant(\"success\");\n                         setShow(true);\n                         let arr = participants;\n                         arr.push(NewUserID);\n                         setParticipants(arr);\n                         setDummy(!dummy);\n                         document.getElementsByClassName(\n                              \"newUserIDUserInput\"\n                         )[0].value = \"\";\n                    } else {\n                         setAlertHead(\"User not found!\");\n                         setAlertBody(\n                              \"The userID you entered does not exist in our database. Please check it and try again.\"\n                         );\n                         setVariant(\"danger\");\n                         setShow(true);\n                    }\n               } catch (error) {\n                    setAlertHead(\"Unknown error occured!\");\n                    setAlertBody(\n                         \"An unknown error occured. please check your network and try again.\"\n                    );\n                    setVariant(\"danger\");\n                    setShow(true);\n               }\n          }\n     };\n     const handleSubmit = async (e) => {\n          e.preventDefault();\n          const currentUser_ = JSON.parse(localStorage.getItem(\"currentUser\"));\n          const organisation = {\n               name: currentUser_.name,\n               email: currentUser_.email,\n               password: currentUser_.password,\n               organisations: currentUser_.organisations,\n               User_id: currentUser_._id,\n               users: participants,\n               OrgName: OrganisationName,\n          };\n          try {\n               const response = await fetch(\"https://dizkuz-server.onrender.com/newOrg\", {\n                    method: \"POST\",\n                    body: JSON.stringify(organisation),\n                    headers: {\n                         \"Content-Type\": \"application/json\",\n                    },\n               });\n               const data = await response.json();\n               if (data.status === \"Success\") {\n                    let curUser = {\n                         name: data.name,\n                         email: data.email,\n                         password: data.password,\n                         organisations: data.organisations,\n                         messages: data.messages,\n                         _id: data._id,\n                         __v: data.__v,\n                    };\n                    localStorage.removeItem(\"currentUser\");\n                    localStorage.setItem(\n                         \"currentUser\",\n                         JSON.stringify(curUser)\n                    );\n                    navigate(\"/organisations\");\n               } else {\n                    setAlertHead(\"Unknown error occured!\");\n                    setAlertBody(\n                         \"An unknown error occured. please check your network and try again.\"\n                    );\n                    setShow(true);\n               }\n          } catch (error) {\n               setAlertHead(\"Unknown error occured!\");\n               setAlertBody(\n                    \"An unknown error occured. please check your network and try again.\"\n               );\n               setShow(true);\n          }\n     };\n\n     useEffect(() => {\n          currentUser_ = JSON.parse(localStorage.getItem(\"currentUser\"));\n          if (currentUser_ == null) {\n               navigate(\"/landing\");\n          }\n     }, []);\n\n     return show ? (\n          <div>\n               <div style={{ height: \"50px\" }}></div>\n               <Alert\n                    variant={variant}\n                    onClose={() => setShow(false)}\n                    dismissible\n               >\n                    <Alert.Heading>{alertHead}</Alert.Heading>\n                    <p>{alertBody}</p>\n               </Alert>\n               <>\n                    <NavBar />\n                    <div\n                         className=\"NewOrganisationContainer\"\n                         style={{ paddingTop: \"0px\" }}\n                    >\n                         <h4>Create New Organisation</h4>\n                         <div className=\"NewOrganisationSubContainer\">\n                              <Form\n                                   className=\"NewOrganisationSubContainer2\"\n                                   onSubmit={handleSubmit}\n                              >\n                                   <Form.Group\n                                        className=\"mb-3\"\n                                        controlId=\"formBasicEmail\"\n                                   >\n                                        <Form.Label>\n                                             Organisation's name\n                                        </Form.Label>\n                                        <Form.Control\n                                             type=\"text\"\n                                             placeholder=\"Enter your organisation's name\"\n                                             name=\"organisationName\"\n                                             value={OrganisationName}\n                                             onChange={handleInputName}\n                                             required\n                                        />\n                                        <Form.Text className=\"text-muted\">\n                                             Name of an organisation can never\n                                             be changed again.\n                                        </Form.Text>\n                                   </Form.Group>\n                                   <div className=\"participantContainer\">\n                                        <b>Users</b>\n                                        <hr />\n                                        <div style={{ textAlign: \"start\" }}>\n                                             {participantComponent}\n                                        </div>\n                                   </div>\n                                   <Form.Group\n                                        className=\"mb-3\"\n                                        controlId=\"formBasicEmail\"\n                                   >\n                                        <Form.Label>Add user</Form.Label>\n                                        <Form.Control\n                                             type=\"text\"\n                                             placeholder=\"Enter the ID of the user\"\n                                             name=\"newUserID\"\n                                             onChange={handleID}\n                                             className=\"newUserIDUserInput\"\n                                        />\n                                        <Form.Text className=\"text-muted\">\n                                             Leave it blank if you don&apos;t want to\n                                             add more users.\n                                        </Form.Text>\n                                   </Form.Group>\n                                   <Button\n                                        variant=\"outline-primary\"\n                                        className=\"newOrgButton\"\n                                        onClick={AddNewUser}\n                                   >\n                                        Add User\n                                   </Button>\n                                   <Button\n                                        variant=\"primary\"\n                                        type=\"submit\"\n                                        className=\"newOrgButton\"\n                                        onClick={handleSubmit}\n                                   >\n                                        Create Organisation\n                                   </Button>\n                              </Form>\n                         </div>\n                    </div>\n                    <Footer />\n               </>\n          </div>\n     ) : (\n          <div>\n               <>\n                    <NavBar />\n                    <div\n                         className=\"NewOrganisationContainer\"\n                         style={{ paddingTop: \"70px\" }}\n                    >\n                         <h4>Create New Organisation</h4>\n                         <div className=\"NewOrganisationSubContainer\">\n                              <Form className=\"NewOrganisationSubContainer2\">\n                                   <Form.Group\n                                        className=\"mb-3\"\n                                        controlId=\"formBasicEmail\"\n                                   >\n                                        <Form.Label>\n                                             Organisation's name\n                                        </Form.Label>\n                                        <Form.Control\n                                             type=\"text\"\n                                             placeholder=\"Enter your organisation's name\"\n                                             name=\"organisationName\"\n                                             value={OrganisationName}\n                                             onChange={handleInputName}\n                                             required\n                                        />\n                                        <Form.Text className=\"text-muted\">\n                                             Name of an organisation can never\n                                             be changed again.\n                                        </Form.Text>\n                                   </Form.Group>\n                                   <div className=\"participantContainer\">\n                                        <b>Users</b>\n                                        <hr />\n                                        <div style={{ textAlign: \"start\" }}>\n                                             {participantComponent}\n                                        </div>\n                                   </div>\n                                   <Form.Group\n                                        className=\"mb-3\"\n                                        controlId=\"formBasicEmail\"\n                                   >\n                                        <Form.Label>Add user</Form.Label>\n                                        <Form.Control\n                                             type=\"text\"\n                                             placeholder=\"Enter the ID of the user\"\n                                             name=\"newUserID\"\n                                             onChange={handleID}\n                                             className=\"newUserIDUserInput\"\n                                        />\n                                        <Form.Text className=\"text-muted\">\n                                             Leave it blank if you don&apos;t want to\n                                             add more users.\n                                        </Form.Text>\n                                   </Form.Group>\n                                   <Button\n                                        variant=\"outline-primary\"\n                                        className=\"newOrgButton\"\n                                        onClick={AddNewUser}\n                                   >\n                                        Add User\n                                   </Button>\n                                   <Button\n                                        variant=\"primary\"\n                                        type=\"submit\"\n                                        className=\"newOrgButton\"\n                                        onClick={handleSubmit}\n                                   >\n                                        Create Organisation\n                                   </Button>\n                              </Form>\n                         </div>\n                    </div>\n                    <Footer />\n               </>\n          </div>\n     );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}